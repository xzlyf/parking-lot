<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xz.parking.dao.EmployeeDao">
    <!--返回主键id会自动映射到实体类中，通过实体类(AdminPo)直接getId()即可，这里resultType依然返回操作行数-->
    <insert id="save" parameterType="com.xz.parking.entity.po.AdminPo" useGeneratedKeys="true" keyProperty="id">
        insert into t_admin(employee_no,passwd,`name`,is_enable) value (#{employeeNo},#{passwd},#{name},#{isEnable})
    </insert>
    <update id="update" parameterType="com.xz.parking.entity.po.AdminPo">
        update t_admin
        <set>
            <if test="name!=null">name = #{name}</if>
            <if test="passwd!=null">passwd = #{passwd}</if>
            <if test="isEnable!=null">is_enable = #{isEnable}</if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteById">
        delete from t_admin where id = #{id}
    </delete>

    <resultMap id="adminMap" type="com.xz.parking.entity.vo.AdminVo">
        <id column="id" property="id"/>
        <result column="employee_no" property="employeeNo"/>
        <result column="name" property="name"/>
        <result column="is_enable" property="isEnable"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
        <collection property="roles" ofType="com.xz.parking.entity.po.RolePo">
            <result column="r_desc" property="description"/>
            <result column="r_name" property="name"/>
        </collection>
    </resultMap>

    <!--通过权限中间表查询对应权限-->
    <select id="findAll" resultMap="adminMap">
        select t.* ,r.description as r_desc ,r.name as r_name
        from t_admin t
        left join  admin_role tr on t.id = tr.admin_id
        left join t_role r on tr.role_id =r.id
    </select>
    <select id="findRole" resultType="com.xz.parking.entity.po.RolePo">
        select * from t_role where id = #{id}
    </select>

    <select id="queryAdminByName" parameterType="String" resultMap="adminMap">
        select t.* ,r.description as r_desc ,r.name as r_name
        from t_admin t
        left join  admin_role tr on t.id = tr.admin_id
        left join t_role r on tr.role_id =r.id
        where t.name = #{name}
    </select>
    <select id="queryAdminByEmployeeNo" parameterType="String" resultMap="adminMap">
        select t.* ,r.description as r_desc ,r.name as r_name
        from t_admin t
        left join  admin_role tr on t.id = tr.admin_id
        left join t_role r on tr.role_id =r.id
        where t.employee_no = #{employeeNo}
    </select>
</mapper>